{
  "info": {
    "name": "Security Diploma K8s API",
    "description": "API коллекция для дипломного проекта по безопасности в Kubernetes",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Проверка состояния сервиса и подключений к БД и Redis"
      },
      "response": []
    },
    {
      "name": "Get All Endpoints",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/endpoints",
          "host": ["{{base_url}}"],
          "path": ["api", "endpoints"]
        },
        "description": "Получение списка всех доступных API эндпоинтов"
      },
      "response": []
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            },
            "description": "Получение списка всех пользователей из базы данных"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{$randomFullName}}\",\n  \"email\": \"{{$randomEmail}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            },
            "description": "Создание нового пользователя в базе данных"
          },
          "response": []
        },
        {
          "name": "Create User - Test Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Максим Рудин\",\n  \"email\": \"maxim.rudin@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            },
            "description": "Создание тестового пользователя с фиксированными данными"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Statistics",
      "item": [
        {
          "name": "Get Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "stats"]
            },
            "description": "Получение статистики приложения (кэшируется в Redis на 60 секунд)"
          },
          "response": []
        },
        {
          "name": "Get Stats - Force Refresh",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/stats?refresh=true",
              "host": ["{{base_url}}"],
              "path": ["api", "stats"],
              "query": [
                {
                  "key": "refresh",
                  "value": "true",
                  "description": "Параметр для принудительного обновления кэша"
                }
              ]
            },
            "description": "Получение статистики с принудительным обновлением кэша"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Security",
      "item": [
        {
          "name": "Get Security Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/security",
              "host": ["{{base_url}}"],
              "path": ["api", "security"]
            },
            "description": "Получение информации о настройках безопасности контейнера и pod'а"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Load Testing",
      "item": [
        {
          "name": "Bulk Create Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"User {{$randomInt}}\",\n  \"email\": \"user{{$randomInt}}@test.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            },
            "description": "Создание пользователей для нагрузочного тестирования"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Установка базового URL если не задан",
          "if (!pm.environment.get('base_url')) {",
          "    pm.environment.set('base_url', 'http://localhost:3000');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Базовые тесты для всех запросов",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has valid JSON', function () {",
          "    pm.response.to.have.jsonBody();",
          "});",
          "",
          "// Логирование ответа для отладки",
          "console.log('Response:', pm.response.json());"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string",
      "description": "Базовый URL для API"
    }
  ]
}
